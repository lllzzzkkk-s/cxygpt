name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # 获取上一个 tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            # 第一个 release，获取所有提交
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # 获取两个 tag 之间的提交
            COMMITS=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi

          # 保存到文件
          echo "$COMMITS" > CHANGELOG.txt

          # 输出到 GitHub Actions
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## 🚀 What's Changed

            ${{ steps.changelog.outputs.changelog }}

            ## 📦 Docker Images

            ```bash
            # API Gateway
            docker pull ghcr.io/${{ github.repository }}/api-gateway:${{ github.ref_name }}

            # Web Frontend
            docker pull ghcr.io/${{ github.repository }}/web:${{ github.ref_name }}
            ```

            ## 📖 Documentation

            - [Architecture](./ARCHITECTURE.md)
            - [Database Setup](./DATABASE.md)
            - [Testing Guide](./TESTING.md)
            - [Verification](./VERIFICATION.md)

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.previous_tag }}...${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Send notification
        run: |
          echo "✅ Release ${{ github.ref_name }} has been published!"
          echo "📦 Docker images are available on GitHub Container Registry"
