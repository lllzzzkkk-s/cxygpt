name: Full Stack CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend Tests
    uses: ./.github/workflows/backend.yml
    secrets: inherit

  frontend:
    name: Frontend Tests
    uses: ./.github/workflows/frontend.yml
    secrets: inherit

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: cxygpt
          POSTGRES_PASSWORD: cxygpt_password
          POSTGRES_DB: cxygpt_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install backend dependencies
        working-directory: apps/api-gateway
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run integration tests
        working-directory: apps/api-gateway
        env:
          DATABASE_URL: postgresql+asyncpg://cxygpt:cxygpt_password@localhost:5432/cxygpt_db
          REDIS_URL: redis://localhost:6379/0
        run: |
          pytest tests/integration/ -v

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [backend, frontend, integration, security]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "Backend: ${{ needs.backend.result }}"
          echo "Frontend: ${{ needs.frontend.result }}"
          echo "Integration: ${{ needs.integration.result }}"
          echo "Security: ${{ needs.security.result }}"

      - name: Post summary
        run: |
          if [[ "${{ needs.backend.result }}" == "success" ]] && \
             [[ "${{ needs.frontend.result }}" == "success" ]] && \
             [[ "${{ needs.integration.result }}" == "success" ]]; then
            echo "✅ All CI checks passed!"
            exit 0
          else
            echo "❌ Some CI checks failed"
            exit 1
          fi
