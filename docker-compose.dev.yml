# ================================
# Docker Compose 开发环境配置
# ================================
version: '3.8'

services:
  # ========================
  # API Gateway (开发模式)
  # ========================
  api-gateway:
    build:
      context: ./apps/api-gateway
      dockerfile: Dockerfile
    container_name: cxygpt-gateway-dev
    ports:
      - "8001:8001"
    environment:
      - SINGLE_USER=1
      - USE_MOCK=1
      - GATEWAY_HOST=0.0.0.0
      - GATEWAY_PORT=8001
      - DATABASE_URL=mysql+aiomysql://cxygpt:cxygpt123@mysql:3306/cxygpt?charset=utf8mb4
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./apps/api-gateway:/app
      - ./configs:/configs
    depends_on:
      - mysql
      - redis
    networks:
      - cxygpt-network
    restart: unless-stopped
    command: uvicorn api_gateway.main:app --host 0.0.0.0 --port 8001 --reload

  # ========================
  # Web Frontend (开发模式)
  # ========================
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: cxygpt-web-dev
    ports:
      - "5173:5173"
    environment:
      - VITE_API_GATEWAY_URL=http://localhost:8001
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    networks:
      - cxygpt-network
    restart: unless-stopped

  # ========================
  # MySQL
  # ========================
  mysql:
    image: mysql:8.0
    container_name: cxygpt-mysql-dev
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=cxygpt
      - MYSQL_USER=cxygpt
      - MYSQL_PASSWORD=cxygpt123
    ports:
      - "3306:3306"
    volumes:
      - mysql-dev-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - cxygpt-network

  # ========================
  # Redis
  # ========================
  redis:
    image: redis:7-alpine
    container_name: cxygpt-redis-dev
    ports:
      - "6379:6379"
    networks:
      - cxygpt-network

networks:
  cxygpt-network:
    driver: bridge

volumes:
  mysql-dev-data:
